{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"if",
				"if_suspend"
			],
			[
				"main",
				"main_thread"
			],
			[
				"sche",
				"sche_push_back"
			],
			[
				"num_Wor",
				"num_workers_run"
			],
			[
				"num_wor",
				"num_workers_plan"
			],
			[
				"Wo",
				"Worker_handle"
			],
			[
				"num",
				"num_request_each_type"
			],
			[
				"NUM",
				"num_projectidea"
			],
			[
				"get_",
				"get_num_cpu_intensive"
			],
			[
				"pro",
				"projectidea"
			],
			[
				"new",
				"new_worker_idx"
			],
			[
				"num_",
				"num_workers_run"
			],
			[
				"recv",
				"num_workers_recv"
			],
			[
				"LOG_P",
				"LOG_PRINT"
			],
			[
				"max",
				"max_num_workers"
			],
			[
				"num_wrk",
				"num_workers_recv"
			],
			[
				"num_work",
				"num_workers_run"
			],
			[
				"num_worker",
				"num_workers_plan"
			],
			[
				"if_",
				"if_scaling_out"
			],
			[
				"log",
				"LOG_PRINT"
			],
			[
				"map",
				"worker_idx_map"
			],
			[
				"wor",
				"worker_handle"
			],
			[
				"time",
				"time_to_be_killed"
			],
			[
				"update",
				"update_time"
			],
			[
				"worker_idx",
				"worker_idx_map"
			],
			[
				"worker",
				"worker_tag"
			],
			[
				"pl",
				"plan_num_workers"
			],
			[
				"request",
				"request_type"
			],
			[
				"LOG",
				"LOG_PRINT"
			],
			[
				"get",
				"get_arg"
			],
			[
				"ma",
				"master_cache"
			],
			[
				"DEBUG",
				"DEBUG_PRINT"
			],
			[
				"DE",
				"DEBUG_PRINT"
			],
			[
				"client",
				"client_req"
			],
			[
				"cache",
				"cached_item_t"
			],
			[
				"last",
				"last_node"
			],
			[
				"idx",
				"idx_if_compppri"
			],
			[
				"comppri",
				"comppri_map"
			],
			[
				"COMMp",
				"COMPPRI_NUM"
			],
			[
				"COUN",
				"counter_primes_n"
			],
			[
				"COMm",
				"COMPAREPRIMES"
			],
			[
				"COMM",
				"COMPPRI_NUM"
			],
			[
				"comp",
				"comppri_item_t"
			],
			[
				"COMPA",
				"COMPAREPRIMES_NUM_CNT"
			],
			[
				"fio",
				"fifo_queue"
			],
			[
				"fast",
				"fast_queue"
			],
			[
				"MAX",
				"MAX_RUNNING_TELLMENOW"
			],
			[
				"fifo",
				"fifo_queue"
			],
			[
				"decrease_",
				"decrease_pending_request_cnt"
			],
			[
				"numw",
				"num_wisdom418"
			],
			[
				"temp",
				"temp_func2"
			],
			[
				"SCHE",
				"sche_node_t"
			],
			[
				"THREAD",
				"thread_t"
			],
			[
				"thread",
				"thread_t"
			],
			[
				"task_",
				"task_t"
			],
			[
				"set_",
				"set_cr3"
			],
			[
				"page",
				"page_dir"
			],
			[
				"NUM_",
				"NUM_KERN_PAGES"
			],
			[
				"asm_",
				"asm_timer_handler"
			],
			[
				"stat",
				"start_vertex"
			],
			[
				"total",
				"total_vertices"
			],
			[
				"iter",
				"iteration"
			],
			[
				"world",
				"world_size"
			],
			[
				"worl",
				"world_rank"
			],
			[
				"get_local",
				"get_local_frontier_size"
			],
			[
				"end_",
				"end_vertex"
			],
			[
				"NOT",
				"NOT_VISITED_MARKER"
			],
			[
				"old_",
				"old_index_ptr"
			],
			[
				"size",
				"sizeof"
			],
			[
				"start",
				"start_vertex"
			],
			[
				"vertices",
				"vertices_per_process"
			],
			[
				"root",
				"root_end_edge"
			],
			[
				"out",
				"outgoing_size"
			],
			[
				"pre",
				"cond_predicate"
			],
			[
				"is",
				"is_under_used"
			],
			[
				"is_",
				"is_under_used_mutex"
			],
			[
				"condlock",
				"condlock_node"
			],
			[
				"sem",
				"sem_wait"
			],
			[
				"rw",
				"rwlock_t"
			],
			[
				"node",
				"node_cnt"
			],
			[
				"exe",
				"excellent"
			],
			[
				"task",
				"task_vanish"
			],
			[
				"stack",
				"stack_size"
			],
			[
				"WAIT",
				"wait_list_node"
			],
			[
				"nd",
				"node_cnt"
			],
			[
				"sta",
				"stack_base"
			],
			[
				"wait",
				"wait_list_item"
			],
			[
				"mutex",
				"allocator_block_mutex"
			],
			[
				"allocator_",
				"allocator_block"
			],
			[
				"allocator",
				"allocator_mutex"
			],
			[
				"mutex_",
				"mutex_lock"
			],
			[
				"block_",
				"allocator_block_mutex"
			],
			[
				"alloca",
				"allocator"
			],
			[
				"allocato",
				"allocator_block"
			],
			[
				"chunk",
				"chunk_num"
			],
			[
				"get__",
				"get_free_chunk_idx"
			],
			[
				"tail",
				"tail_node"
			],
			[
				"____",
				"__shared__"
			],
			[
				"kernelBox",
				"kernelBoxRecursive"
			],
			[
				"block",
				"blockIdx"
			],
			[
				"__",
				"__syncthreads"
			],
			[
				"ra",
				"radius"
			],
			[
				"strat",
				"startCircleTime"
			],
			[
				"deno",
				"denorMaxXf"
			],
			[
				"norM",
				"norMaxY"
			],
			[
				"denor",
				"denorMinY"
			],
			[
				"nor",
				"norMinY"
			],
			[
				"IMAG",
				"imageWidth"
			],
			[
				"img",
				"imageHeight"
			],
			[
				"bl",
				"blockIdx"
			],
			[
				"R",
				"ROUND_DIV"
			],
			[
				"ima",
				"imageHeight"
			],
			[
				"COL",
				"COLUMN_THREADS_PER_BLOCK_RENDER"
			],
			[
				"RO",
				"ROUNDED_DIV"
			],
			[
				"box",
				"boxRowNum"
			],
			[
				"row",
				"boxRowNum"
			],
			[
				"COLUMN",
				"COLUMN_THREADS_PER_BLOCK_FIND_CIRCLE"
			],
			[
				"ROW",
				"ROW_THREADS_PER_BLOCK_FIND_CIRCLE"
			],
			[
				"im",
				"imageWidth"
			],
			[
				"deb",
				"debug_indexCircleInBlock"
			],
			[
				"numC",
				"numCircleInBlock"
			],
			[
				"circle",
				"circleIndexInstance"
			],
			[
				"SID",
				"SIDE_LENGTH"
			],
			[
				"Block",
				"blockDim"
			],
			[
				"cudaM",
				"cudaMemcpy"
			],
			[
				"CUDA",
				"cudaMalloc"
			],
			[
				"EDN",
				"endif"
			],
			[
				"cuda",
				"cudaMemcpy"
			]
		]
	},
	"buffers":
	[
		{
			"file": "kern/tcb_hashtab.c",
			"settings":
			{
				"buffer_size": 1489,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "kern/inc/scheduler.h",
			"settings":
			{
				"buffer_size": 862,
				"line_ending": "Unix"
			}
		},
		{
			"file": "kern/scheduler.c",
			"settings":
			{
				"buffer_size": 4186,
				"line_ending": "Unix"
			}
		},
		{
			"file": "kern/list.c",
			"settings":
			{
				"buffer_size": 4305,
				"line_ending": "Unix"
			}
		},
		{
			"file": "kern/kernel.c",
			"settings":
			{
				"buffer_size": 2145,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/** @file task.c\n *  @author Newton Xie (ncx)\n *  @bug No known bugs.\n */\n\n#include <stdlib.h>\n#include <malloc.h>\n#include <string.h>\n#include <simics.h>\n#include <page.h>\n#include <x86/cr.h>\n\n#include \"vm.h\"\n#include \"maps.h\"\n#include \"task.h\"\n#include \"allocator.h\"\n#include \"scheduler.h\"\n#include \"return_type.h\"\n\nextern uint32_t *kern_page_dir;\nextern int num_free_frames;\nextern allocator_t *sche_allocator;\n\nid_counter_t id_counter = {0};\n\nint id_counter_init() {\n    id_counter.task_id_counter = 0;\n    id_counter.thread_id_counter = 0;\n    mutex_init(&id_counter.task_id_counter_mutex);\n    mutex_init(&id_counter.thread_id_counter_mutex);\n\n    return SUCCESS;\n}\n\ntask_t *task_init(const char *fname) {\n    task_t *task = malloc(sizeof(task_t));\n    task->task_id = id_counter.task_id_counter++;\n    task->main_thread = thread_init();\n    task->main_thread->task = task;\n    task->main_thread->status = INITIALIZED;\n    task->parent_task = NULL;\n    task->thread_cnt = 1;\n\n    task->page_dir = smemalign(PAGE_SIZE, PAGE_SIZE);\n    int i;\n    for (i = 0; i < NUM_KERN_TABLES; i++) {\n        task->page_dir[i] = kern_page_dir[i];\n    }\n\n    task->maps = maps_init();\n    maps_insert(task->maps, 0, PAGE_SIZE * NUM_KERN_PAGES, 0);\n    maps_insert(task->maps, RW_PHYS_VA, PAGE_SIZE, 0);\n\n    simple_elf_t elf_header;\n    elf_load_helper(&elf_header, fname);\n    task->main_thread->ip = elf_header.e_entry;\n\n    // register new task for simics symbolic debugging\n    sim_reg_process(task->page_dir, fname);\n\n    set_cr3((uint32_t)task->page_dir);\n    load_program(&elf_header, task->maps);\n\n    return task;\n}\n\nthread_t *thread_init() {\n    sche_node_t *sche_node = allocator_alloc(sche_allocator);\n    tcb_tb_node_t *tcb\n    thread_t *thread = GET_TCB_FROM_SCHE(sche_node);\n    thread->tid = id_counter.thread_id_counter++;\n    void *kern_stack = malloc(KERN_STACK_SIZE);\n    thread->kern_sp = (uint32_t)kern_stack + KERN_STACK_SIZE;\n    thread->user_sp = USER_STACK_START;\n\n    return thread;\n}\n\nint load_program(simple_elf_t *header, map_list_t *maps) {\n    lprintf(\"text\");\n    load_elf_section(header->e_fname, header->e_txtstart, header->e_txtlen,\n                     header->e_txtoff, PTE_USER | PTE_PRESENT);\n    maps_insert(maps, header->e_txtstart, header->e_txtlen, MAP_USER);\n\n    lprintf(\"dat\");\n    load_elf_section(header->e_fname, header->e_datstart, header->e_datlen,\n                     header->e_datoff, PTE_USER | PTE_WRITE | PTE_PRESENT);\n    maps_insert(maps, header->e_datstart, header->e_datlen, MAP_USER | MAP_WRITE);\n\n    lprintf(\"rodat\");\n    load_elf_section(header->e_fname, header->e_rodatstart, header->e_rodatlen,\n                     header->e_rodatoff, PTE_USER | PTE_PRESENT);\n    maps_insert(maps, header->e_rodatstart, header->e_rodatlen, MAP_USER);\n\n    lprintf(\"bss\");\n    load_elf_section(header->e_fname, header->e_bssstart, header->e_bsslen,\n                     -1, PTE_USER | PTE_WRITE | PTE_PRESENT);\n    maps_insert(maps, header->e_bssstart, header->e_bsslen, MAP_USER | MAP_WRITE);\n\n    lprintf(\"stack\");\n    load_elf_section(header->e_fname, USER_STACK_LOW, USER_STACK_SIZE,\n                     -1, PTE_USER | PTE_WRITE | PTE_PRESENT);\n    maps_insert(maps, USER_STACK_LOW, USER_STACK_SIZE, MAP_USER | MAP_WRITE);\n\n    // test maps\n    maps_print(maps);\n\n    return 0;\n}\n\nint load_elf_section(const char *fname, unsigned long start, unsigned long len,\n                     long offset, int pte_flags) {\n    lprintf(\"%p\", (void *)start);\n    lprintf(\"%p\", (void *)len);\n    lprintf(\"%p\", (void *)offset);\n\n    uint32_t low = (uint32_t)start & PAGE_ALIGN_MASK;\n    uint32_t high = (uint32_t)(start + len);\n\n    uint32_t addr = low;\n    while (addr < high) {\n        if (!(get_pte(addr) & PTE_PRESENT)) {\n            // TODO fix error handling here\n            if (dec_num_free_frames(1) < 0) {\n                return -1;\n            }\n\n            uint32_t frame_addr = get_frame();\n            set_pte(addr, frame_addr, pte_flags);\n        }\n        addr += PAGE_SIZE;\n    }\n\n    if (offset != -1) {\n        getbytes(fname, offset, len, (char *)start);\n    }\n\n    return 0;\n}\n",
			"file": "kern/task.c",
			"file_size": 4108,
			"file_write_time": 131363599940000000,
			"settings":
			{
				"buffer_size": 4130,
				"line_ending": "Unix"
			}
		},
		{
			"file": "config.mk",
			"settings":
			{
				"buffer_size": 6066,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/** @file syscalls.c\n *\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n#include <page.h>\n#include <simics.h>\n#include <x86/cr.h>\n#include <mutex.h>  /* mutex */\n#include <string.h> /* memset */\n#include <malloc.h> /* malloc, smemalign, sfree */\n#include <asm.h>    /* disable_interrupt(), enable... */\n\n#include \"vm.h\"\n#include \"scheduler.h\"\n#include \"asm_registers.h\"\n#include \"asm_switch.h\"\n#include \"allocator.h\" /* allocator */\n#include \"asm_set_exec_context.h\"\n#include \"utils.h\"\n\nextern id_counter_t id_counter;\nextern allocator_t *sche_allocator;\n\nextern uint32_t *kern_page_dir;\nextern uint32_t zfod_frame;\nextern int num_free_frames;\n\nint kern_gettid(void) {\n    thread_t *thread = get_cur_tcb();\n    return thread->tid;\n}\n\nint kern_exec(void) {\n    uint32_t *esi = (uint32_t *)get_esi();\n    char *execname = (char *)(*esi);\n    char **argvec = (char **)(*(esi + 1));\n\n    // TODO\n    // need to check arg counts and lengths\n    int argc = 0;\n    char **temp = argvec;\n    while (*temp) {\n        argc += 1;\n        temp += 1;\n    }\n\n    simple_elf_t elf_header;\n    // TODO\n    // macro for namebuf length\n    // need to check execname length fits\n    char namebuf[32];\n    sprintf(namebuf, \"%s\", execname);\n    elf_load_helper(&elf_header, namebuf);\n\n    char argbuf[256];\n    char *ptrbuf[16];\n    char *arg;\n    char *marker = argbuf;\n    int len;\n    int i;\n    for (i = 0; i < argc; i++) {\n        arg = *(argvec + i);\n        len = strlen(arg);\n        strncpy(marker, arg, len);\n        marker[len] = '\\0';\n        ptrbuf[i] = marker;\n        marker += len + 1;\n    }\n    ptrbuf[argc] = NULL;\n\n    thread_t *thread = get_cur_tcb();\n    /*\n    // need to free old kernel stack?\n    void *kern_stack = malloc(KERN_STACK_SIZE);\n    thread->kern_sp = (uint32_t)kern_stack + KERN_STACK_SIZE;\n    */\n    thread->user_sp = USER_STACK_START;\n    thread->ip = elf_header.e_entry;\n\n    task_t *task = thread->task;\n    maps_destroy(task->maps);\n    task->maps = maps_init();\n    maps_insert(task->maps, 0, PAGE_SIZE * NUM_KERN_PAGES, 0);\n    maps_insert(task->maps, RW_PHYS_VA, PAGE_SIZE, 0);\n\n    clear_pgdir(task->page_dir);\n    set_cr3((uint32_t)task->page_dir);\n\n    load_program(&elf_header, task->maps);\n\n    // need macros here badly\n    // 5 because ret addr and 4 args\n    char **argv = (char **)(USER_STACK_START + 5 * sizeof(int));\n    // 6 because argv is a null terminated char ptr array\n    char *buf = (char *)(USER_STACK_START + 6 * sizeof(int) +\n                         argc * sizeof(int));\n\n    for (i = 0; i < argc; i++) {\n        arg = *(ptrbuf + i);\n        len = strlen(arg);\n        strncpy(buf, arg, len);\n        buf[len] = '\\0';\n        argv[i] = buf;\n        buf += len + 1;\n    }\n    argv[argc] = NULL;\n\n    uint32_t *ptr = (uint32_t *)USER_STACK_START;\n    *(ptr + 1) = argc;\n    *(ptr + 2) = (uint32_t)argv;\n    *(ptr + 3) = USER_STACK_LOW + USER_STACK_SIZE;\n    *(ptr + 4) = USER_STACK_LOW;\n\n    // update fname for simics symbolic debugging\n    sim_reg_process(task->page_dir, elf_header.e_fname);\n\n    set_esp0(thread->kern_sp);\n    kern_to_user(USER_STACK_START, elf_header.e_entry);\n\n    return 0;\n}\n\nint kern_new_pages(void) {\n    uint32_t *esi = (uint32_t *)get_esi();\n    uint32_t base = (uint32_t)(*esi);\n    uint32_t len = (uint32_t)(*(esi + 1));\n\n    if (base & (~PAGE_ALIGN_MASK)) {\n        return -1;\n    }\n\n    if (len % PAGE_SIZE != 0 || len == 0) {\n        return -1;\n    }\n\n    // this is an ugly check for \"overflowing\" len\n    if (base + (len - 1) < base) {\n        return -1;\n    }\n\n    thread_t *thread = get_cur_tcb();\n    task_t *task = thread->task;\n    if (maps_find(task->maps, base, len)) {\n        // already mapped or reserved\n        return -1;\n    }\n\n    if (dec_num_free_frames(len / PAGE_SIZE) < 0) {\n        // not enough memory\n        return -1;\n    }\n\n    uint32_t page_addr;\n    for (page_addr = base; page_addr - base > len; page_addr += PAGE_SIZE) {\n        set_pte(page_addr, zfod_frame, PTE_USER | PTE_PRESENT);\n    }\n\n    maps_insert(task->maps, base, len, MAP_USER | MAP_WRITE);\n\n    return 0;\n}\n\nint kern_deschedule(void) {\n    uint32_t *esi = (uint32_t *)get_esi();\n    int *reject = (int *)esi;\n    // if (check_ptr_valid((uint32_t)reject, (uint32_t *)get_cr3(), 0) == -1)\n    //     return -1;\n\n    disable_interrupts();\n    \n    while (1) {}\n    if (*reject != 0) {\n        enable_interrupts();\n        return 0;\n    }\n    sche_yield(1);\n    enable_interrupts();\n    return 0;\n}",
			"file": "kern/syscalls.c",
			"file_size": 4497,
			"file_write_time": 131364253890000000,
			"settings":
			{
				"buffer_size": 4502,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 320.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"package control ",
				"Package Control: List Packages"
			],
			[
				" in",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"select",
				"ColorSchemeSelector: Select Color Scheme"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 489.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern"
	],
	"file_history":
	[
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/tcb_hashtab.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/scratch/pebble-master/15-410/prj_03/src/p3/kern/thread.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/scratch/pebble-master/15-410/prj_03/src/p3/kern/inc/frame.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/scratch/pebble-master/15-410/prj_03/src/p3/kern/utils.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/scratch/pebble-master/15-410/prj_03/src/p3/kern/sche.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/scratch/pebble-master/15-410/prj_03/src/p3/kern/keyboard.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/scratch/pebble-master/15-410/prj_03/src/p3/kern/list.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_registers.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/kernel.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/progs/my_fork_test.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/fork.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/scheduler.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/driver/kern_timer.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/driver/asm_drivers.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/config.mk",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/syscalls.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/keyboard_driver.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/driver/timer_driver.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/list.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/list.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/return_type.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/timer_driver.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/timer_driver.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/scheduler.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/progs/swexn_cookie_monster.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_set_exec_context.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/mutex.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/asm_set_exec_context.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/task.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/progs/my_user.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/maps.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/p3.sublime-project",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/return_type.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/inc/handlers.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/syscalls",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/master.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/return_error.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/lru_cache.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/master.cpp",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/worker.cpp",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/a4.sublime-project",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/sftp-config.json",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/tests/grading_nonuniform2.txt",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/worker_sche_queue.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/tests/hello418.txt",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/list.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/asst4harness/worker/work_engine.cpp",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/asst4harness/types/messages.cpp",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/asst4include/server/messages.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/worker_sche_queue.cpp",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/lru_cache.cpp",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/list.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/lru_cache.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/worker_sche_queue.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/request_type_def.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/asst4include/tools/work_queue.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/worker.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Parallel_Computing_15-618/repo/assignment/4/src/myserver/my_worker_queue.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/simics/simics.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/scheduler.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_mutex.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/vm.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/malloc_wrappers.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/libstring/memset.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/string/memset.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/vm.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/syscall/kern_fork.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/syscalls.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_syscalls.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/malloc/memalign.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libthread/malloc.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/x86/seg.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_switch.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_syscalls.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/.gitignore",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/handlers.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/task.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/new_vm.bk.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/x86/cr.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/x86/page.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_set_exec_context.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/kernel.log",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_page_inval.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/handlers.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/task.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_timer_handler.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libsyscall/syscall.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libsyscall/gettid.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libsyscall/fork.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libsyscall/exec.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/allocator.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_handlers.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/progs/merchant.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/progs/bistromath.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_get_eip_next.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_page_inval.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/inc/malloc.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/malloc/sfree.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/spec/syscall_int.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_keyboard_handler.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_keyboard_handler.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_timer_handler.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/install.old",
		"/Users/dengqiaoyu/Library/Application Support/Sublime Text 3/Packages/User/SFTP.errors.log",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/progs/ck1.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/progs/idle.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/mutex.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/list.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/inc/mutex.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/allocator.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/x86/idt.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/asm_switch.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/inc/mutex_type.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libthread/allocator.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libthread/allocator_internal.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libthread/list.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libthread/list.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/kern/keyboard_driver.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/x86/asm.S",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libautostack/autostack.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/x86/keyhelp.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/x86/eflags.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/elf/load_helper.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/elf/elf_410.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/malloc/malloc.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410kern/lmm/lmm_alloc.c",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/spec/limits.h",
		"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/user/libthread/thr_internals.h"
	],
	"find":
	{
		"height": 30.0
	},
	"find_in_files":
	{
		"height": 134.0,
		"where_history":
		[
			"",
			"/Users/dengqiaoyu/Documents/Learning/CMU/2_Semester/Operating_System_Design_and_Implementation_15-605/repo_group/p3/410user/progs",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sys_readline",
			"_INTERNAL",
			"curr_",
			"curr",
			"CURR",
			"curr",
			"if_suspend",
			"tcb_ptr",
			"sche_push_back",
			"get_curr_tcb",
			"Email address",
			"message field",
			"part",
			"adj",
			"thing",
			"get_req",
			"get_next_worker_idx_countprimes",
			"create_computeprimes_req",
			"handle_compareprimes_req",
			"handle_comppri_response",
			"NUM_CONTEXT",
			"Give projectidea",
			"Give projectidea to a killing worker",
			"mstate.num_workers_run",
			"mstate.num_workers_recv",
			"kill_worker",
			"ck_scale_cond",
			"get_next_worker_idx_countprimes",
			"get_free_idx",
			"my_worker[",
			"get_free_idx",
			"ck_scale_cond",
			"if_scaling_out",
			"get_next_worker_idx_countprimes",
			"handle_worker_response",
			"get_works_num",
			"my_worker[",
			"clear_worker_info",
			"my_worker[",
			"my_worker",
			"kill_worker",
			"scale_out",
			"worker",
			"kill_worker_node",
			"scale_out",
			"my_worker[worker_id]",
			"scale_out",
			"get_cpu_intensive_num",
			"get_cpu_intensive",
			"kill_worker",
			"time_since_last_new",
			"if_scaling_out",
			"ave_cpu_intensive",
			"if_scaling_out",
			"LOG2_PRINT",
			"LOG_PRINT",
			"printf_worker_info",
			"num_workers_run",
			"num_workers_plan",
			"if_scaling_out",
			"mstate.plan_num_workers",
			"max_num_workers",
			"new_worker_idx",
			"plan_num_workers",
			"scale_in",
			"time_since_last_new",
			"num_projectidea",
			"scale_out",
			"time_to_be_killed = -1;",
			"min_num_request",
			"plan_num_workers",
			"handle_compareprimes_req",
			"num_cpu_intensive",
			"DEBUG2_PRINT",
			"LOG",
			"kill_worker",
			"num_workers",
			"scale_out",
			"update_time",
			"kill_worker",
			"num_works_total",
			"j",
			"void scale_in",
			"void scale_out",
			"int scale_in",
			"int scale_out",
			"plan_num_workers",
			"j",
			"i",
			"my_worker_info",
			"num_workers",
			"fifo_queue_t",
			"num_request_each_type[COUNTERPRIMES]",
			"get_next_worker_idx",
			"sum_primes_countprimes",
			"get_next_worker_idx_countprimes",
			"handle_compareprimes_req",
			"get_next_worker_idx",
			"state",
			"min_num_request",
			"get_next_worker_idx_countprimes",
			"DEBUG",
			"MAX_RUNNING_PROJECTIDEA",
			"handle_compareprimes_req",
			"increase_running_req_cnt",
			"get_req",
			"57297",
			"73458",
			"74977",
			"66175",
			"77823",
			"62475",
			"66499",
			"78499",
			"62402",
			"67497",
			"64509",
			"72699",
			"75023",
			"76764",
			"67497",
			"77773",
			"counterprimes",
			"618",
			"2198",
			"576",
			"2236",
			"784"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"cur_",
			"get_next_worker_idx_cntpri",
			"create_comppri_req",
			"handle_comppri_req",
			"handle_comppri_resp",
			"countprimes",
			"handler_init",
			"scheduler_init",
			"tcb_tb_node",
			"MAX_DATA_LENGTH_PERBLOCK",
			"is_readable",
			"get_addr_range_and_func_num",
			"game_ui_main_layout_win",
			"game_ui_title_win",
			"print_base",
			"virus_row",
			"virus_col",
			"player_row",
			"player_col",
			"main_layout_win",
			"instruction_win",
			"title_win",
			" ",
			"is_print",
			"is_valid",
			"type_name",
			"get_type_name",
			"func_search",
			"get_ebp",
			"ebp",
			"int"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "kern/tcb_hashtab.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1489,
						"regions":
						{
						},
						"selection":
						[
							[
								871,
								886
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1488,
										1489
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										707,
										708
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 36.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "kern/inc/scheduler.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 862,
						"regions":
						{
						},
						"selection":
						[
							[
								481,
								481
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										480,
										481
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										437,
										438
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "kern/scheduler.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4186,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "kern/list.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4305,
						"regions":
						{
						},
						"selection":
						[
							[
								2865,
								2865
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2866,
										2867
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										2773,
										2774
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1776.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "kern/kernel.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2145,
						"regions":
						{
						},
						"selection":
						[
							[
								692,
								692
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 314.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "kern/task.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4130,
						"regions":
						{
						},
						"selection":
						[
							[
								107,
								107
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "config.mk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6066,
						"regions":
						{
						},
						"selection":
						[
							[
								4492,
								4492
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1341.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "kern/syscalls.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4502,
						"regions":
						{
						},
						"selection":
						[
							[
								3730,
								3730
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3754,
										3755
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3691,
										3692
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2806.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 48.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 100.0
	},
	"output.unsaved_changes":
	{
		"height": 144.0
	},
	"pinned_build_system": "",
	"project": "p3.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"README.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 182.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
